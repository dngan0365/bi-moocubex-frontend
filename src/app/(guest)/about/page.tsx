'use client'
import Head from 'next/head';
import { useState } from 'react';
import { BarChart, LineChart, Users, AlertTriangle, Info, Clipboard, Zap, FileText } from 'lucide-react';
import { useTheme } from '@/context/ThemeContext';

import React, { ReactNode } from 'react';

interface CardProps {
  children: ReactNode;
  className?: string;
}

const Card: React.FC<CardProps> = ({ children, className = '' }) => (
  <div className={`bg-white rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300 ${className}`}>
    {children}
  </div>
);
const StatCard = ({ title, value, trend, trendValue, icon, color }: any) => (
  <div className={`bg-gray-800 p-5 rounded-xl border-l-4 ${color} transition-transform duration-300 hover:scale-[1.02]`}>
    <div className="flex justify-between items-start">
      <div>
        <h3 className="text-cyan-400 text-sm font-medium mb-2">{title}</h3>
        <div className="text-3xl text-white font-bold">{value}</div>
        <div className={`mt-2 text-xs ${trend === 'up' ? 'text-green-400' : trend === 'down' ? 'text-red-400' : 'text-yellow-400'}`}>
          {trend === 'up' ? '‚Üë' : trend === 'down' ? '‚Üì' : '‚Üí'} {trendValue} from last week
        </div>
      </div>
      <div className={`p-3 rounded-full bg-gray-700`}>
        {icon}
      </div>
    </div>
  </div>
);

const TeamMember = ({ name, id, classInfo, avatar } : any) => (
  <div className="flex items-center space-x-4 p-4 bg-gray-50 rounded-xl hover:bg-cyan-50 transition-colors">
    <div className="flex-shrink-0 h-14 w-14 rounded-full bg-gradient-to-r from-cyan-500 to-blue-600 flex items-center justify-center text-2xl text-white shadow-md">
      {avatar}
    </div>
    <div>
      <p className="font-medium text-gray-900">{name}</p>
      <p className="text-sm text-gray-500">{id}</p>
      <p className="text-sm text-gray-500">{classInfo}</p>
    </div>
  </div>
);

export default function Home() {
  const [activeTab, setActiveTab] = useState('overview');
  const { theme } = useTheme();
  
  const teamMembers = [
    { name: 'Nguy·ªÖn H·ªìng Ph√°t', id: '22521072', class: 'KHMT2202.3', avatar: 'üê±' },
    { name: 'Ph·∫°m Thanh Th·∫£o', id: '22521072', class: 'KHMT2202.3', avatar: 'üêà' },
    { name: 'L√™ D∆∞∆°ng Minh Thi√™n', id: '22521072', class: 'KHMT2202.3', avatar: 'üêï' },
    { name: 'ƒê·∫∑ng Thanh Ng√¢n', id: '22521072', class: 'KHMT2202.3', avatar: 'ü¶ä' },
    { name: 'ƒêinh H·ªØu Ph∆∞·ªõc', id: '22521072', class: 'KHMT2202.3', avatar: 'üê±' }
  ];
  
  const tabs = [
    { id: 'overview', name: 'Overview', icon: <Info className="w-4 h-4" /> },
    { id: 'application', name: 'Application', icon: <Clipboard className="w-4 h-4" /> },
    { id: 'innovation', name: 'Innovation', icon: <Zap className="w-4 h-4" /> },
    { id: 'data', name: 'Data', icon: <FileText className="w-4 h-4" /> }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-gray-100">
      <Head>
        <title>MOOC Learning Analytics</title>
        <meta name="description" content="Predicting online learners' academic performance on MOOCs" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="bg-white shadow-sm sticky top-0 z-10">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <div className="flex items-center justify-between">
            <h1 className="text-2xl font-bold text-gray-900 flex items-center">
              <span className="bg-gradient-to-r from-cyan-600 to-blue-700 text-transparent bg-clip-text">
                Learning Analytics Platform
              </span>
            </h1>
            <nav className="hidden md:flex space-x-4">
              {['Dashboard', 'Analytics', 'Reports', 'Settings'].map((item) => (
                <a
                  key={item}
                  href="#"
                  className="px-3 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-md transition-colors"
                >
                  {item}
                </a>
              ))}
            </nav>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        
        {/* Project Title Section */}
        <div className="bg-gradient-to-r from-cyan-600 to-blue-700 rounded-xl shadow-lg mb-8 text-white p-10 transform hover:scale-[1.01] transition-transform duration-300">
          <div className="max-w-3xl mx-auto text-center">
            <h2 className="text-2xl font-bold mb-4">ƒê·ªÄ T√ÄI</h2>
            <h3 className="text-3xl mb-6 font-bold">
              D·ª∞ ƒêO√ÅN K·∫æT QU·∫¢ H·ªåC T·∫¨P C·ª¶A H·ªåC VI√äN TR√äN N·ªÄN T·∫¢NG MOOCS
            </h3>
            <p className="text-xl">
              PREDICTING ONLINE LEARNERS' ACADEMIC PERFORMANCE AND EARLY WARNING ON MOOCS
            </p>
          </div>
        </div>

        {/* Project Team Section */}
        <Card className="mb-8">
          <div className="px-6 py-5 border-b border-gray-200 flex items-center justify-between">
            <h2 className="text-xl font-semibold text-gray-800 flex items-center">
              <Users className="w-5 h-5 mr-2 text-cyan-600" />
              Implementation Team
            </h2>
            <span className="bg-cyan-100 text-cyan-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
              5 Members
            </span>
          </div>
          <div className="p-6">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {teamMembers.map((member, index) => (
                <TeamMember 
                  key={index}
                  name={member.name}
                  id={member.id}
                  classInfo={member.class}
                  avatar={member.avatar}
                />
              ))}
            </div>
            <div className="mt-8 text-center p-4 bg-gradient-to-r from-gray-50 to-cyan-50 rounded-xl">
              <p className="text-sm text-gray-700">
                Tr∆∞·ªùng ƒê·∫°i h·ªçc C√¥ng ngh·ªá th√¥ng tin - Khoa CS
              </p>
            </div>
          </div>
        </Card>

        {/* Project Details Section */}
        <Card className="mb-8">
          <div className="px-6 py-5 border-b border-gray-200">
            <h2 className="text-xl font-semibold text-gray-800">Project Information</h2>
          </div>
          
          {/* Tabs */}
          <div className="border-b border-gray-200 px-6">
            <nav className="-mb-px flex space-x-8">
              {tabs.map((tab) => (
                <button
                  key={tab.id}
                  onClick={() => setActiveTab(tab.id)}
                  className={`${
                    activeTab === tab.id
                      ? 'border-cyan-500 text-cyan-600'
                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                  }
                  whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm flex items-center transition-colors`}
                >
                  <span className="mr-2">{tab.icon}</span>
                  {tab.name}
                </button>
              ))}
            </nav>
          </div>
          
          {/* Tab Content */}
          <div className="p-6">
            {activeTab === 'overview' && (
              <div className="space-y-8">
                <div className="flex items-start space-x-6">
                  <div className="bg-cyan-100 rounded-full p-3 flex-shrink-0">
                    <Info className="w-6 h-6 text-cyan-500" />
                  </div>
                  <div>
                    <h3 className="text-lg font-medium text-gray-900">M·ª•c ti√™u</h3>
                    <p className="mt-2 text-gray-600 leading-relaxed">
                      Trong b·ªëi c·∫£nh gi√°o d·ª•c tr·ª±c tuy·∫øn ph√°t tri·ªÉn m·∫°nh m·∫Ω, MOOCs tr·ªü th√†nh l·ª±a ch·ªçn h·ªçc t·∫≠p ph·ªï bi·∫øn v·ªõi t√≠nh linh ho·∫°t v√† kh·∫£ nƒÉng ti·∫øp c·∫≠n r·ªông r√£i. Tuy nhi√™n, t·ª∑ l·ªá ho√†n th√†nh kho√° h·ªçc th·∫•p v√† s·ª± thi·∫øu h·ª•t h·ªó tr·ª£ c√° nh√¢n ho√° v·∫´n l√† th√°ch th·ª©c l·ªõn. Ph·∫ßn l·ªõn h·ªçc vi√™n kh√¥ng ƒë·ªß k·∫øt qu·∫£ do thi·∫øu ƒë·ªông l·ª±c, ph∆∞∆°ng ph√°p h·ªçc ch∆∞a ph√π h·ª£p ho·∫∑c kh√¥ng ƒë∆∞·ª£c h∆∞·ªõng d·∫´n k·ªãp th·ªùi.
                    </p>
                  </div>
                </div>
                
                <div className="flex items-start space-x-6">
                  <div className="bg-cyan-100 rounded-full p-3 flex-shrink-0">
                    <Clipboard className="w-6 h-6 text-cyan-500" />
                  </div>
                  <div>
                    <h3 className="text-lg font-medium text-gray-900">Kh·∫£ nƒÉng</h3>
                    <p className="mt-2 text-gray-600 leading-relaxed">
                      V·ªÅ m·∫∑t h·ªçc thu·∫≠t, vi·ªác ph√¢n lo·∫°i k·∫øt qu·∫£ h·ªçc t·∫≠p theo 5 m·ª©c ƒë·ªô d√†i h∆°i m√† h√¨nh h·ªçc may x·ª≠ l√Ω ƒë·ªì th·ªã ph·ª©c t·∫°p t·ª´ nhi·ªÅu ngu·ªìn, ƒë·∫£m b·∫£o ƒë·ªô ch√≠nh x√°c v√† kh·∫£ nƒÉng kh√°i qu√°t trong m√¥i tr∆∞·ªùng h·ªçc t·∫≠p ƒëa d·∫°ng.
                    </p>
                  </div>
                </div>
                
                <div className="flex items-start space-x-6">
                  <div className="bg-cyan-100 rounded-full p-3 flex-shrink-0">
                    <Zap className="w-6 h-6 text-cyan-500" />
                  </div>
                  <div>
                    <h3 className="text-lg font-medium text-gray-900">√ù nghƒ©a</h3>
                    <p className="mt-2 text-gray-600 leading-relaxed">
                      ƒê·ªÅ t√†i "D·ª± ƒëo√°n k·∫øt qu·∫£ h·ªçc t·∫≠p v√† c·∫£nh b√°o s·ªõm tr√™n n√™n t·∫£ng MOOCs" h∆∞·ªõng ƒë·∫øn s·ª± nghi√™n c·ª©u s√¢u s·∫Øc v·ªÅ kh·∫£ nƒÉng d·ª± ƒëo√°n v√† ph√¢n lo·∫°i k·∫øt qu·∫£ h·ªçc t·∫≠p c·ªßa h·ªçc vi√™n tr√™n c√°c n·ªÅn t·∫£ng MOOCs, t·ª´ ƒë√≥ cung c·∫•p h·ªá th·ªëng c·∫£nh b√°o s·ªõm.
                    </p>
                  </div>
                </div>
              </div>
            )}
            
            {activeTab === 'application' && (
              <div className="space-y-6">
                <h3 className="text-lg font-medium text-gray-900 flex items-center">
                  <Clipboard className="w-5 h-5 mr-2 text-cyan-500" />
                  ·ª®ng d·ª•ng
                </h3>
                <div className="bg-gradient-to-r from-gray-50 to-cyan-50 p-6 rounded-xl">
                  <p className="text-gray-600 leading-relaxed">
                    ƒê·ªÅ t√†i h∆∞·ªõng ƒë·∫øn vi·ªác x√¢y d·ª±ng m√¥ h√¨nh d·ª± ƒëo√°n k·∫øt qu·∫£ h·ªçc t·∫≠p c·ªßa ng∆∞·ªùi d√πng cu·ªëi cho c√°c n·ªÅn d·ªØ li·ªáu h√†nh vi h·ªçc t·∫≠p tr√™n c√°c n·ªÅn t·∫£ng MOOCs. H·ªá th·ªëng s·∫Ω sinh th·ªùi ƒëi·ªÉm c·∫£nh b√°o, l√Ω do, t√¨nh tr·∫°ng h·ªçc t·∫≠p hi·ªán t·∫°i, d·ª± ƒëo√°n k·∫øt qu·∫£ c√≥ th·ªÉ ƒë·∫°t ƒë∆∞·ª£c, ƒë·ªìng th·ªùi ƒë·ªÅ xu·∫•t c√°c gi·∫£i ph√°p kh·∫Øc ph·ª•c c·ª• th·ªÉ, ch√≠nh x√°c v√† nguy c∆° kh√¥ng ho√†n th√†nh kho√° h·ªçc.
                  </p>
                </div>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
                  <div className="bg-white p-6 rounded-xl border border-gray-100 shadow-sm">
                    <h4 className="font-medium text-cyan-700 mb-3">ƒê·ªëi v·ªõi ng∆∞·ªùi h·ªçc</h4>
                    <p className="text-gray-600">
                      ƒê·ªÅ t√†i ƒë∆∞a ra gi·∫£i ph√°p c·∫£nh b√°o s·ªõm v·ªõi nhi·ªÅu gi√° tr·ªã thi·∫øt th·ª±c trong ƒë√†o t·∫°o tr·ª±c tuy·∫øn ƒë·ªëi v·ªõi ng∆∞·ªùi h·ªçc, h·ªá th·ªëng ƒë·ªìng v·∫£i v·ªõi m√¥i c√¥ng c·ª• h·ªó tr·ª£ theo d√µi v√† ƒë√°nh gi√° qu√° tr√¨nh h·ªçc t·∫≠p, ho·∫° v√†o c·∫£nh b√°o s·ªõm, sinh vi√™n c√≥ th·ªÉ ƒëi·ªÅu ch·ªânh ph∆∞∆°ng ph√°p v√† th·ªùi gian bi·ªÉu, t·ª´ ƒë√≥ n√¢ng cao k·∫øt qu·∫£ h·ªçc t·∫≠p c·ªßa kho√° h·ªçc v√† ph√°t tri·ªÉn k·ªπ nƒÉng t·ª± h·ªçc.
                    </p>
                  </div>
                  <div className="bg-white p-6 rounded-xl border border-gray-100 shadow-sm">
                    <h4 className="font-medium text-cyan-700 mb-3">ƒê·ªëi v·ªõi gi·∫£ng vi√™n</h4>
                    <p className="text-gray-600">
                      V·ªõi gi·∫£ng vi√™n v√† nh√† qu·∫£n l√Ω, h·ªá th·ªëng gi√∫y c√≥ nh·∫≠n bi·∫øt h·ªçc vi√™n c√≥ nguy c∆° kh√≥ ho√†n th√†nh kho√° h·ªçc, t·ª´ ƒë√≥ ƒë∆∞a ra c√°c bi·ªán ph√°p h·ªó tr·ª£ ph√π h·ª£p nh∆∞ t∆∞ v·∫•n c√° nh√¢n, t·ªï ch·ª©c √¥n t·∫≠p ho·∫∑c ƒëi·ªÅu ch·ªânh n·ªôi dung gi·∫£ng d·∫°y. Ngo√†i ra, d·ª± li·ªáu t·ª´ h·ªá th·ªëng c√≤n gi√∫p ƒë√°nh gi√° ch·∫•t l∆∞·ª£ng t√†i li·ªáu h·ªçc t·∫≠p, ƒë√°nh gi√° s·ªë ca ti·ªÅm nƒÉng c·∫ßn h·ªó tr·ª£ v√† t·ªëi ∆∞u ho√° ƒë·ªìng gi·∫£ng d·∫°y.
                    </p>
                  </div>
                </div>
              </div>
            )}
            
            {activeTab === 'innovation' && (
              <div>
                <h3 className="text-lg font-medium text-gray-900 flex items-center mb-6">
                  <Zap className="w-5 h-5 mr-2 text-cyan-500" />
                  T√≠nh m·ªõi & C·∫•p thi·∫øt
                </h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {[
                    {
                      title: "M√¥ h√¨nh m·∫°ng neural ti√™n ti·∫øn",
                      description: "·ª®ng d·ª•ng hai m√¥ h√¨nh m·∫°ng neural Stack-LSTM v√† m·∫°ng Fully Connected Neural Network (FCNN) v√†o d·ª± ƒëo√°n k·∫øt qu·∫£ h·ªçc t·∫≠p."
                    },
                    {
                      title: "Ph√¢n t√≠ch h√†nh vi theo th·ªùi gian",
                      description: "Ph√¢n t√≠ch h√†nh vi h·ªçc t·∫≠p chi ti·∫øt theo chu·ªói th·ªùi gian thay v√¨ ch·ªâ d·ª±a v√†o ƒëi·ªÉm s·ªë."
                    },
                    {
                      title: "Thu·∫≠t to√°n Machine Learning hi·ªán ƒë·∫°i",
                      description: "√Åp d·ª•ng c√°c thu·∫≠t to√°n nh∆∞ Random Forest v√† LightGBM ƒë·ªÉ tƒÉng ƒë·ªô ch√≠nh x√°c."
                    },
                    {
                      title: "H·ªá th·ªëng c·∫£nh b√°o ch·ªß ƒë·ªông",
                      description: "H·ªá th·ªëng c·∫£nh b√°o s·ªõm th√¥ng qua tr·ª±c ti·∫øp ƒë·∫øn h·ªçc vi√™n, m√†i phi hi·ªán th·ªß ch≈© m√£ qu·∫£n l√Ω ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh ch·ªß ƒë·ªông v√† to√†n di·ªán trong h·ªó tr·ª£ h·ªçc t·∫≠p."
                    }
                  ].map((item, index) => (
                    <div key={index} className="bg-white p-5 rounded-xl border border-gray-100 shadow-sm hover:shadow-md transition-shadow">
                      <h4 className="font-medium text-cyan-700 mb-2">{item.title}</h4>
                      <p className="text-gray-600 text-sm">{item.description}</p>
                    </div>
                  ))}
                </div>
              </div>
            )}
            
            {activeTab === 'data' && (
              <div>
                <div className="flex items-center justify-between mb-6">
                  <h3 className="text-lg font-medium text-gray-900 flex items-center">
                    <FileText className="w-5 h-5 mr-2 text-cyan-500" />
                    Data Sources
                  </h3>
                  <button className="px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-cyan-500 to-blue-600 rounded-md hover:opacity-90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-cyan-500 shadow-sm transition-all">
                    View Data
                  </button>
                </div>
                <div className="bg-gradient-to-r from-gray-50 to-cyan-50 p-6 rounded-xl mb-6">
                  <p className="text-gray-600 leading-relaxed">
                    Trong nghi√™n c·ª©u n√†y, nh√≥m s·ª≠ d·ª•ng b·ªô d·ªØ li·ªáu MOOCCubeX, m·ªôt t·∫≠p d·ªØ li·ªáu quy m√¥ l·ªõn ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi Nh√≥m K·ªπ thu·∫≠t Tr√≠ th·ª©c c·ªßa ƒê·∫°i h·ªçc Thanh Hoa, thu th·∫≠p t·ª´ n·ªÅn t·∫£ng h·ªçc tr·ª±c tuy·∫øn XuetangX. B·ªô d·ªØ li·ªáu n√†y ƒë∆∞·ª£c thi·∫øt k·∫ø chuy√™n bi·ªát cho c√°c nghi√™n c·ª©u li√™n quan ƒë·∫øn h√†nh vi h·ªçc t·∫≠p trong m√¥i tr∆∞·ªùng MOOC (Massive Open Online Courses), v·ªõi ph·∫°m vi bao ph·ªß r·ªông, c·∫•u tr√∫c r√µ r√†ng v√† t·ªï ch·ª©c theo c√°c kh√°i ni·ªám chi ti·∫øt.
                  </p>
                </div>
                <div className="bg-white p-6 rounded-xl border border-gray-100 shadow-sm">
                  <h4 className="font-medium text-cyan-700 mb-4">Dataset Features:</h4>
                  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                    {[
                      "User interaction data",
                      "Course structure information",
                      "Academic performance indicators",
                      "Behavioral patterns",
                      "Temporal information"
                    ].map((feature, index) => (
                      <div key={index} className="flex items-center p-3 bg-gray-50 rounded-lg">
                        <div className="w-2 h-2 bg-cyan-500 rounded-full mr-3"></div>
                        <span className="text-gray-700">{feature}</span>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            )}
          </div>
        </Card>
        
        {/* Dashboard Preview */}
        <Card className="mb-8">
          <div className="px-6 py-5 border-b border-gray-200 flex justify-between items-center">
            <h2 className="text-xl font-semibold text-gray-800 flex items-center">
              <BarChart className="w-5 h-5 mr-2 text-cyan-600" />
              Dashboard Preview
            </h2>
            <span className="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
              Live Demo
            </span>
          </div>
          <div className="p-6">
            <div className="border border-gray-200 rounded-xl overflow-hidden shadow-lg">
              <div className="bg-gray-800 text-white p-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-2">
                    <div className="w-3 h-3 bg-red-500 rounded-full"></div>
                    <div className="w-3 h-3 bg-yellow-500 rounded-full"></div>
                    <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                  </div>
                  <span className="text-xs ml-2">MOOC Learning Analytics Dashboard</span>
                  <div className="flex space-x-4 text-gray-400">
                    <BarChart className="w-4 h-4" />
                    <LineChart className="w-4 h-4" />
                    <Users className="w-4 h-4" />
                  </div>
                </div>
              </div>
              <div className="bg-gray-900 p-6">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  <StatCard 
                    title="Students at Risk" 
                    value="24%" 
                    trend="down" 
                    trendValue="3% from last week" 
                    icon={<AlertTriangle className="w-5 h-5 text-red-400" />}
                    color="border-red-500"
                  />
                  <StatCard 
                    title="Avg. Completion" 
                    value="67%" 
                    trend="up" 
                    trendValue="5% from last week" 
                    icon={<BarChart className="w-5 h-5 text-green-400" />}
                    color="border-green-500"
                  />
                  <StatCard 
                    title="Active Students" 
                    value="428" 
                    trend="same" 
                    trendValue="2% from last week" 
                    icon={<Users className="w-5 h-5 text-yellow-400" />}
                    color="border-yellow-500"
                  />
                </div>
                <div className="mt-6 bg-gray-800 p-4 rounded-xl">
                  <div className="flex justify-between items-center mb-4">
                    <h3 className="text-cyan-400 text-sm font-medium">Performance Prediction Trends</h3>
                    <div className="flex space-x-2">
                      <button className="text-xs bg-gray-700 px-2 py-1 rounded text-gray-300 hover:bg-gray-600 transition-colors">Week</button>
                      <button className="text-xs bg-gray-700 px-2 py-1 rounded text-gray-300 hover:bg-gray-600 transition-colors">Month</button>
                      <button className="text-xs bg-cyan-700 px-2 py-1 rounded text-white">Year</button>
                    </div>
                  </div>
                  <div className="h-48 flex items-end space-x-2">
                    {[35, 42, 58, 63, 72, 80, 65, 72, 84, 86, 76, 80].map((value, index) => (
                      <div key={index} className="flex-1 flex flex-col items-center">
                        <div 
                          className="w-full bg-gradient-to-t from-cyan-600 to-cyan-400 rounded-t hover:from-cyan-500 hover:to-cyan-300 transition-colors duration-300" 
                          style={{ height: `${value}%` }}
                        ></div>
                        <div className="text-xs text-gray-400 mt-1">{index + 1}</div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </Card>
      </main>

      <footer className="bg-white border-t border-gray-200 mt-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="flex flex-col items-center justify-center">
            <div className="flex space-x-6 mb-4">
              {[
                { icon: <Info className="w-5 h-5" />, label: "About" },
                { icon: <Users className="w-5 h-5" />, label: "Team" },
                { icon: <FileText className="w-5 h-5" />, label: "Documentation" }
              ].map((item, index) => (
                <a key={index} href="#" className="text-gray-500 hover:text-cyan-600 flex items-center space-x-1">
                  {item.icon}
                  <span className="text-sm">{item.label}</span>
                </a>
              ))}
            </div>
            <p className="text-center text-sm text-gray-500">
              ¬© 2025 MOOC Learning Analytics Project. Tr∆∞·ªùng ƒê·∫°i h·ªçc C√¥ng ngh·ªá th√¥ng tin - Khoa CS
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
}